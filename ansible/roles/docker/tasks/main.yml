- name: Install dnf-plugins-core
  dnf:
    name: dnf-plugins-core
    state: present

- name: Add Docker CE repo
  command: >
    dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
  args:
    creates: /etc/yum.repos.d/docker-ce.repo

- name: Install Docker packages
  dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Enable and start Docker service
  systemd:
    name: docker
    enabled: yes
    state: started

- name: Ensure docker group exists
  group:
    name: docker
    state: present

- name: Add user to docker group
  user:
    name: "{{ ansible_user | default('opc') }}"
    groups: docker
    append: yes

- name: Install pip
  package:
    name: python3-pip
    state: present

- name: Install Docker SDK for Python
  pip:
    name: docker
    executable: pip3

- name: Log in to Docker registry (optional for private registries)
  docker_login:
    registry_url: "{{ docker_registry_url | default('') }}"
    username: "{{ docker_registry_user | default(omit) }}"
    password: "{{ docker_registry_password | default(omit) }}"
  when: docker_registry_user is defined

- name: Pull container image
  docker_image:
    name: "{{ docker_image_abidex_webserver }}"
    source: pull

- name: Run abidex-webserver container
  docker_container:
    name: abidex-webserver
    image: "{{ docker_image_abidex_webserver }}"
    state: started
    recreate: true
    pull: true
    restart_policy: always
    published_ports:
      - "8000:8000"

- name: Run portfolio container
  docker_container:
    name: portfolio
    image: "{{ docker_image_portfolio }}"
    state: started
    recreate: true
    pull: true
    restart_policy: always
    published_ports:
      - "8001:8001"

- name: Prune unused Docker images
  command: docker image prune -f
  when: cleanup_unused_images | default(false)